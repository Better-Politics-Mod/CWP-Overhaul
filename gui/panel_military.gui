# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types panel_military {
	type tab_army = top_illu {
		size = { @panel_width_plus_20 400 }

		background = {
			block "illu" {
				#texture = "gfx/interface/illustrations/top_illus/top_illu_army.dds"
			}
		}
		hbox = {
			spacing = -25
			vbox = {
				visible = "[InformationPanel.IsTabSelected('army')]"
				margin = { 15 15 }
				margin_top = 10
				background = {
					using = dropdown_background
				} 
	
				# Battalions
				military_panel_unit_info = {
	
					### Mobilize button
					button = {
						enabled = "[IsValid( Country.MobilizeAllGenerals )]"
						using = default_button
						using = diplomatic_play_mobilize_button_sound
						size = { 240 50 }
						using = fontsize_large
						onclick = "[PopupManager.ToggleMobilizeAllGenerals]"
						tooltip = "[GetDesc( Country.MobilizeAllGenerals )]"
	
						textbox = {
							text = "MOBILIZE_ALL_GENERALS"
							align = center|nobaseline
							parentanchor = center
							margin_left = 55
							size = { 220 30 }
							fontsize_min = 12
							elide = right
						}
						mobilization_icon_big = {
							parentanchor = left|vcenter
							position = { 4 0 }
						}
					}
				}
	
				# Conscripts
				military_panel_unit_info = {
	
					blockoverride "header" {
						text = "CONSCRIPTS"
					}
	
					blockoverride "current_unit_count" {
						text = "PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS"
						tooltip = "PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS_TOOLTIP"
					}
	
					blockoverride "with_general" {
						text = "[Country.GetConscriptedBattalionsWithGeneralsRaw]"
					}
					blockoverride "with_general_hbox" {
						tooltip = "MOBILIZED_CONSCRIPTS_WITH_GENERAL_TOOLTIP"
						alpha = "[TransparentIfZero_int32(Country.GetConscriptedBattalionsWithGeneralsRaw)]"
					}
	
					blockoverride "in_garrison" {
						text = "[Country.GetConscriptedBattalionsInGarrisonRaw]"
					}
	
					blockoverride "in_garrison_hbox" {
						tooltip = "MOBILIZED_CONSCRIPTS_IN_GARRISON_TOOLTIP"
						alpha = "[TransparentIfZero_int32(Country.GetConscriptedBattalionsInGarrisonRaw)]"
					}
	
					### Activate Conscripts
					button = {
						enabled = "[IsValid( Country.ActivateConscriptionCenters )]"
						using = default_button_action
						size = { 240 50 }
						using = fontsize_large
						onclick = "[GetLensToolbar.ActivateOption('activate_conscription_centers_lens_option')]"
						tooltip = "[GetDesc( Country.ActivateConscriptionCenters )]"
	
						textbox = {
							text = "MILITARY_PANEL_ACTIVATE_CONSCRIPTS"
							align = center|nobaseline
							parentanchor = center
							margin_left = 55
							size = { 220 30 }
							fontsize_min = 12
							elide = right
						}
	
						conscription_icon_big = {
							parentanchor = left|vcenter
							position = { 4 0 }
						}
					}
				}
			}
			vbox = {
				visible = "[InformationPanel.IsTabSelected('army')]"
				margin = { 15 15 }
				margin_top = 10
				background = {
					using = dropdown_background
				} 
				flowcontainer = {
					direction = vertical
					spacing = 20
					minimumsize = { 50 332 }
					margin = { 5 5 }
					textbox = {
						parentanchor = hcenter
						align = hcenter
						raw_text = "Readiness"
						using = header_font_fancy
						fontsize = 30
					}
					flowcontainer = { # Readiness System
						direction = vertical
						margin_left = -2
						readiness_bar = {}
					}
					flowcontainer = {
						direction = vertical
						spacing = 20
						parentanchor = hcenter
						textbox = {
							align = hcenter
							raw_text = "Currently at #v [Country.MakeScope.ScriptValue('readiness')]%#! [concept_readiness]"
						}
						textbox = {
							align = hcenter
							raw_text = "Changes by #v [Country.MakeScope.ScriptValue('readiness_sum_value')]#! every month"
						}
					}
					flowcontainer = {
						parentanchor = hcenter
						button = {
							using = default_button_map_interaction
							using = shimmer
							size = { 65 35 }
							tooltip = "LOWER_READINESS"
							enabled = "[Not(GetVariableSystem.Exists('lower_readiness'))]"
							icon = {
								texture = "gfx/interface/icons/generic_icons/arrow_left.dds"
								size = { 30 30 }
								position = { 10 2 }
							}
							onclick = "[GetScriptedGui('decrease_readiness_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
							onclick = "[GetVariableSystem.Toggle('lower_readiness')]"
							onclick = "[GetVariableSystem.Clear('maintain_readiness')]"
							onclick = "[GetVariableSystem.Clear('raise_readiness')]"
						}
						button = {
							using = default_button_map_interaction
							using = shimmer
							size = { 65 35 }
							tooltip = "MAINTAIN_READINESS"
							enabled = "[Not(GetVariableSystem.Exists('maintain_readiness'))]"
							icon = {
								texture = "gfx/interface/icons/infamy_icons/reputable.dds"
								size = { 30 30 }
								position = { 18 2 }
							}
							onclick = "[GetScriptedGui('maintain_readiness_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
							onclick = "[GetVariableSystem.Toggle('maintain_readiness')]"
							onclick = "[GetVariableSystem.Clear('lower_readiness')]"
							onclick = "[GetVariableSystem.Clear('raise_readiness')]"
						}
						button = {
							using = default_button_map_interaction
							using = shimmer
							size = { 65 35 }
							tooltip = "INCREASE_READINESS"
							enabled = "[Not(GetVariableSystem.Exists('raise_readiness'))]"
							icon = {
								texture = "gfx/interface/icons/generic_icons/arrow_right.dds"
								size = { 30 30 }
								position = { 20 2 }
							}
							onclick = "[GetScriptedGui('increase_readiness_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
							onclick = "[GetVariableSystem.Toggle('raise_readiness')]"
							onclick = "[GetVariableSystem.Clear('maintain_readiness')]"
							onclick = "[GetVariableSystem.Clear('lower_readiness')]"
						}
					}
				}
			}	
		}	
	}

	type tab_wmd = top_illu {
		maximumsize = { @panel_width_plus_20 -1 }
		minimumsize = { @panel_width_plus_20 1900 }
		background = {
			using = dropdown_background
		}
		wmd_entry = {
			visible = "[GetScriptedGui('can_open_wmd_screen').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			blockoverride "header" {
				raw_text = "Nuclear Weapons"
			}
			blockoverride "header2" {
				raw_text = "[GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sv')] [concept_nuclear_weapons]"
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "[GetPlayer.GetName] Status"
				}
				blockoverride "entrycontainer" {
					textbox = {
						raw_text = "Active #gold Nuclear Weapons Facilities#!: [GetPlayer.MakeScope.ScriptValue('nuclear_weapons_facility_size_national')|v0] "
					}
					textbox = {
						raw_text = "Monthly [concept_nuclear_weapons]: [GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sum')|v0] "
					}
					textbox = {
						raw_text = "Active #gold Strategic Airbases#!: [GetPlayer.MakeScope.ScriptValue('strategic_airbase_size_national')|v0] "
					}
					textbox = {
						raw_text = "Active #gold Missile Silos#!: [GetPlayer.MakeScope.ScriptValue('missile_silo_size_national')|v0] "
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Nuclear Attack Strength"
				}
				blockoverride "entrycontainer" {
					textbox = {
						raw_text = "[concept_nuclear_weapons] Arsenal: [GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sv')|v0] #gold Warheads#!"
					}
					textbox = {
						raw_text = "#v [GetPlayer.MakeScope.Var('nuclear_yield').GetValue|0]kt#! Per Warhead | #v [GetPlayer.MakeScope.ScriptValue('nuclear_strike_values')|0d]#! Total"
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Nuclear Capabilities"
				}
				blockoverride "entrycontainer" {
					textbox = {
						text = "HAS_ATOMIC_CAPABILITY"
					}
					textbox = {
						text = "HAS_THERMONUCLEAR_CAPABILITY"
					}
					textbox = {
						text = "HAS_ICBM_CAPABILITY"
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Global Coverage"
				}
				blockoverride "entrycontainer" {
					flowcontainer = {
						direction = vertical
						spacing = 0
						datamodel = "[GetPlayer.MakeScope.GetList('strategic_regions')]"
						button = {
							size = { 450 40 }
							using = default_button_action
							parentanchor = hcenter
							raw_text = "Average Coverage: [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('nuclear_strike_global_coverage_avg')|v1% )]"
							onclick = "[GetVariableSystem.Toggle('showcoverageregions')]"
							tooltip = "AVERAGE_NUCLEAR_COVERAGE_TOOLTIP"
						}
						item = {
							button = {
								visible = "[GetVariableSystem.Exists('showcoverageregions')]"
								size = { 450 40 }
								using = default_button_map_interaction
								parentanchor = hcenter
								direction = vertical
								datacontext = "[Scope.AccessStrategicRegion]"
								raw_text = "[StrategicRegion.GetName]: [GuiScope.SetRoot( StrategicRegion.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('nuclear_strike_strategic_region_coverage')|v1% )] "
								tooltip = "NUCLEAR_STRATEGIC_REGION_TOOLTIP"
							}
						}
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					parentanchor = hcenter
					align = center
					raw_text = "Nuclear Detonation Focus"
				}
				blockoverride "entrycontainer" {
					parentanchor = hcenter
					flowcontainer = {
						parentanchor = hcenter
						direction = horizontal
						spacing = 10
						button = {
							using = default_button # Approve
							text = "Air Burst"
							enabled = "[Not(GetPlayer.MakeScope.Var('air_burst_focus').IsSet)]"
							onclick = "[GetScriptedGui('wmd_nuclear_detonation_focus_air').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 195 40 }
							tooltip = "AIR_BURST_TOOLTIP"
						}
						button = {
							using = default_button
							text = "Ground Burst" # Reject
							enabled = "[Not(GetPlayer.MakeScope.Var('ground_burst_focus').IsSet)]"
							onclick = "[GetScriptedGui('wmd_nuclear_detonation_focus_ground').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 195 40 }
							tooltip = "GROUND_BURST_TOOLTIP"
						}
					}

				}
			}
			wmd_subentry = {
				blockoverride "title" {
					parentanchor = hcenter
					align = center
					raw_text = "Deployment"
				}
				blockoverride "entrycontainer" {
					parentanchor = hcenter
					flowcontainer = {
						parentanchor = hcenter
						direction = horizontal
						spacing = 10
						button = {
							using = default_button # Approve
							text = "20%"
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)20'))]"
							onclick = "[GetScriptedGui('wmd_deployment_20').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							text = "40%" # Reject
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)40'))]"
							onclick = "[GetScriptedGui('wmd_deployment_40').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							text = "60%" # Reject
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)60'))]"
							onclick = "[GetScriptedGui('wmd_deployment_60').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							text = "80%" # Reject
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)80'))]"
							onclick = "[GetScriptedGui('wmd_deployment_80').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							text = "100%" # Reject
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)100'))]"
							onclick = "[GetScriptedGui('wmd_deployment_100').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
					}
					flowcontainer = {
						margin = { 0 10 }
						parentanchor = right
						direction = horizontal
						spacing = 10
						textbox = {
							margin_top = 15
							align = right
							raw_text = "Show Targeted States on Map"
						}
						checkbutton = {
							onclick = "[GetScriptedGui('show_targeted_states_on_map').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							checked = "[GetPlayer.MakeScope.Var('show_targeted_states_map').IsSet]"
							using = check_button
							size = { 25 25 }
						}
					}
				}
			}
			wmd_targetlist = {}
		}
		wmd_entry = {
			visible = "[Not(GetScriptedGui('can_open_wmd_screen').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			blockoverride "header" {
				raw_text = "Nuclear Weapons"
			}
			blockoverride "header2" {
				raw_text = ""
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "[GetPlayer.GetName] Status"
				}
				blockoverride "info" {
					raw_text = "Does not currently possess [concept_nuclear_weapons]"
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Nuclear Capabilities"
				}
				blockoverride "entrycontainer" {
					textbox = {
						text = "HAS_ATOMIC_CAPABILITY"
					}
					textbox = {
						text = "HAS_THERMONUCLEAR_CAPABILITY"
					}
					textbox = {
						text = "HAS_ICBM_CAPABILITY"
					}
				}
			}
		}
	}
	type wmd_entry = flowcontainer {
		visible = "[InformationPanel.IsTabSelected('wmd')]"
		parentanchor = hcenter
		minimumsize = { 550 200 }
		margin = { 15 15 }
		spacing = 20
		direction = vertical
		background = {
			using = dropdown_background
		}
		widget = {
			parentanchor = hcenter
			minimumsize = { 520 40 }
			spacing = 30
			direction = horizontal
			
			flowcontainer = {
				margin = { 15 15 }
				parentanchor = left
				textbox = {
					block "header" {
						raw_text = "Nuclear Weapons"
					}
					using = header_font_fancy
					fontsize = 30
				}
			}
			flowcontainer = {
				margin = { 15 15 }
				parentanchor = right
				textbox = {
					align = right
					block "header2" {
						raw_text = "[GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sv')] [concept_nuclear_weapons]"
					}
					using = fontsize_large
				}
			}

			background = {
				using = dropdown_background
			}
		}
	}

	type wmd_subentry = flowcontainer {
		parentanchor = hcenter
		minimumsize = { 500 40 }
		direction = vertical
		margin = { 20 20 }
		flowcontainer = {
			parentanchor = left
			direction = vertical
			spacing = 30
			textbox = {
				block "title" {
					raw_text = ""
				}
				using = fontsize_large
			}
			block "entrycontainer" {
				textbox = {
					block "info" {
						raw_text = ""
					}
				}
			}
		}
		background = {
			using = entry_bg_simple
		}
	}

	type wmd_targetlist = flowcontainer {
		
		parentanchor = hcenter
		margin = { 15 15 }
		spacing = 25
		direction = vertical
		background = {
			using = dropdown_background
		}
		textbox = {
			raw_text = "Target List"
			using = header_font_fancy
			fontsize = 30
		}
		textbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			raw_text = "Nuclear Strike Effectiveness: #v [GetPlayer.MakeScope.ScriptValue('nuclear_strike_effectiveness_total')|d]#! per state"
		}
		textbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			raw_text = "Delivery Effectiveness: #v [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('wmd_target_list_states_delivery_effectiveness_total'))|d%]"
		}
		textbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			raw_text = "Estimated Total Casualties: [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('wmd_target_list_states_estimated_casualties_total'))|-d]"
		}
		scrollbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			minimumsize = { 450 500 }
			blockoverride "scrollbox_content" {
				vbox = {
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					datamodel_wrap = 1
					spacing = 25
					datamodel = "[GetPlayer.MakeScope.GetList('wmd_target_list_c')]"
					item = {
						flowcontainer = {
							parentanchor = hcenter
							direction = vertical
							minimumsize = { 420 60 }
							datacontext = "[Scope.AccessCountry]"
							flowcontainer = {
								parentanchor = left
								direction = vertical
								spacing = 20
								section_header_button = {
									visible = "[Not(GetPlayer.MakeScope.Var('targetlist_expanded_country').IsSet)]"
									blockoverride "layout" {
										size = { 350 30 }
									}
									blockoverride "left_text" {
										raw_text = "[Country.GetName]"
									}
									blockoverride "onclick" {
										onclick = "[GetScriptedGui('targetlist_expand_info').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
									blockoverride "onclick_showless" {
										visible = "[Not(GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End))]"
									}
									blockoverride "onclick_showmore" {
										visible = "[GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
								}
								section_header_button = {
									visible = "[GetPlayer.MakeScope.Var('targetlist_expanded_country').IsSet]"
									blockoverride "layout" {
										size = { 350 30 }
									}
									blockoverride "left_text" {
										raw_text = "[Country.GetName]"
									}
									blockoverride "onclick" {
										onclick = "[GetScriptedGui('targetlist_contract_info').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
									blockoverride "onclick_showless" {
										visible = "[GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
									blockoverride "onclick_showmore" {
										visible = "[Not(GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End))]"
									}
								}
								textbox = {
									raw_text = "[GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Country.MakeScope ).ScriptValue('wmd_target_list_states_count_per_country')|v0 )] States - [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Country.MakeScope ).ScriptValue('wmd_target_list_states_population_per_country')|vd )] Population Targeted"
									using = fontsize_min
								}
								textbox = {
									raw_text = "Estimated Casualties - [GuiScope.SetRoot( Country.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('wmd_target_list_states_estimated_casualties_per_country'))|-d]"
									using = fontsize_min
								}
							}
							flowcontainer = {
								parentanchor = right
								direction = horizontal
								spacing = 5
								button_icon_round_map_interaction = {
									size = { 35 35 }
									onclick = "[GetScriptedGui('targetlist_remove_country').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"		
									blockoverride "icon" {
										texture = "gfx/interface/icons/generic_icons/red_cross.dds"
									}
									blockoverride "icon_size" {
										size = { 50% 50% }
									}												
								}
								button_icon_round_map_interaction = {
									size = { 35 35 }
									onclick = "[Country.AccessCapital.ZoomToCapital]"
									tooltip = "ZOOM_TO_COUNTRY_CAPITAL"
									blockoverride "icon" {
										texture = "gfx/interface/buttons/button_icons/location_finder.dds"
									}
									blockoverride "icon_size" {
										size = { 90% 90% }
									}												
								}
							}
							flowcontainer = {
								margin_top = 20
								visible = "[GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
								direction = vertical
								spacing = 25
								datamodel = "[GetPlayer.MakeScope.GetList('wmd_target_list')]"
								item = {
									flowcontainer = {
										visible = "[GetScriptedGui('targetlist_expanded_visible_s').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_state',State.MakeScope).End)]"
										parentanchor = hcenter
										direction = horizontal
										minimumsize = { 420 30 }
										spacing = 30
										datacontext = "[Scope.AccessState]"
										flowcontainer = {
											minimumsize = { 300 70 }
											margin = { 15 15 }
											parentanchor = left
											direction = vertical
											spacing = 20
											textbox = {
												align = left
												raw_text = "[State.GetName] - [State.GetPopulationSize|vD]"
												using = tooltip_above
												fontsize = 20
											}
											textbox = {
												align = left
												text = "nuclear_strategic_region_coverage"
											}
											textbox = {
												align = left
												text = "nuclear_state_delivery_effectiveness"
												using = tooltip_above
											}
											textbox = {
												align = left
												text = "nuclear_state_strike_effectiveness"
												using = tooltip_above
											}
											tooltip = "NUCLEAR_TARGETED_STATE_TOOLTIP"
											background = {
												using = entry_bg_simple
											}
										}
										flowcontainer = {
											parentanchor = right|vcenter
											direction = horizontal
											spacing = 5
											button_icon_round_map_interaction = {
												size = { 35 35 }
												onclick = "[GetScriptedGui('targetlist_remove_state').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_state',State.MakeScope).End)]"
												onrightclick = "[RightClickMenuManager.ShowForGoods(Goods.AccessSelf)]"				
												blockoverride "icon" {
													texture = "gfx/interface/icons/generic_icons/red_cross.dds"
												}
												blockoverride "icon_size" {
													size = { 50% 50% }
												}												
											}
											button_icon_round_map_interaction = {
												size = { 35 35 }
												onclick = "[State.ZoomToCapital]"
												tooltip = "ZOOM_TO_EVENT_WINDOW_STATE"
												blockoverride "icon" {
													texture = "gfx/interface/buttons/button_icons/location_finder.dds"
												}
												blockoverride "icon_size" {
													size = { 90% 90% }
												}											
											}
										}
										background = {
											using = dropdown_background
											margin = { 15 15 }
										}
									}
								}
							}


							background = {
								using = dropdown_background
								margin = { 15 15 }
							}
						}
					}
				}
			}
		}
		flowcontainer = {
			visible = "[Not(GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			minimumsize = { 450 150 }
			flowcontainer = {
				margin_left = 150
				parentanchor = center
				textbox = {
					parentanchor = center
					raw_text = "#n No Targets Set#!"
					using = header_font_fancy
					using = fontsize_mega
				}
			}
			background = {
				using = entry_bg_simple
			}

		}

	}

	type tab_navy = top_illu {
		size = { @panel_width_plus_20 230 }

		background = {
			texture = "gfx/interface/illustrations/top_illus/top_illu_navy.dds"
			using = top_illu_properties
		}
		
		flowcontainer = {
			margin = { 0 20 }
			parentanchor = hcenter
			direction = vertical

			military_panel_flotilla_info = {
			}

			widget = { size = { 1 10 } }
			supply_network_information_small = {
			}
			widget = { size = { 1 10 } }
		}
	}

	type military_panel_unit_info = vbox {
		layoutpolicy_vertical = expanding

		textbox = {
			autoresize = yes
			margin_bottom = 10
			default_format = "#title"
			block "header" {
				text = "REGULARS"
			}
		}

		### ARMY / FORCELIMIT
		textbox = {
			block "current_unit_count" {
				text = "PANEL_MILITARY_ARMY_CURRENT_REGULARS"
				tooltip = "PANEL_MILITARY_ARMY_CURRENT_REGULARS_TOOLTIP"
			}
			autoresize = yes
			align = left|nobaseline
			using = fontsize_mega
		}

		widget = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
		}
		
		### With general
		hbox = {
			margin = { 2 0 }
			block "with_general_hbox" {
				tooltip = "MOBILIZED_REGULARS_WITH_GENERAL_TOOLTIP"
				alpha = "[TransparentIfZero_int32(Country.GetRegularBattalionsWithGeneralsRaw)]"
			}

			layoutpolicy_horizontal = expanding

			textbox = {
				layoutpolicy_horizontal = expanding
				autoresize = yes
				text = "WITH_GENERALS"
				align = left|nobaseline
			}	
			textbox = {
				layoutpolicy_horizontal = expanding
				autoresize = yes
				default_format = "#v"

				block "with_general" {
					text = "[Country.GetRegularBattalionsWithGeneralsRaw]"
				}
				align = right|nobaseline
			}
		}
		
		### In garrison
		hbox = {
			margin = { 2 0 }
			margin_bottom = 5

			block "in_garrison_hbox" {
				tooltip = "MOBILIZED_REGULARS_IN_GARRISON_TOOLTIP"
				alpha = "[TransparentIfZero_int32(Country.GetRegularBattalionsInGarrisonRaw)]"
			}
			layoutpolicy_horizontal = expanding

			textbox = {
				layoutpolicy_horizontal = expanding
				autoresize = yes
				text = "IN_GARRISON"
				align = left|nobaseline
			}	
			textbox = {
				layoutpolicy_horizontal = expanding
				autoresize = yes
				default_format = "#v"

				block "in_garrison" {
					text = "[Country.GetRegularBattalionsInGarrisonRaw]"
				}
				align = right|nobaseline
			}
		}

		widget = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
		}
	}

	type military_panel_flotilla_info = flowcontainer {
		parentanchor = hcenter
		direction = vertical 
		spacing = 5

		### ARMY / FORCELIMIT
		flowcontainer = {
			textbox = {
				text = "PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS"
				tooltip = "PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP"
				autoresize = yes
				align = left|nobaseline
				parentanchor = vcenter
				using = fontsize_mega
			}
		}

		textbox = {
			text = TOTAL_FLOTILLAS
			parentanchor = hcenter
			autoresize = yes
			align = left|nobaseline
		}

	}

	### MOBILIZATION CONTROLS
	type mobilization_icon = widget {
		visible = no
		size = { 22 22 }
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}
		icon = {
			size = { 100% 100% }
			framesize = { 120 120 }
			texture = "gfx/interface/icons/generic_icons/mobilize_icon.dds"
			block "frame" {
				frame = 0
			}
		}
	}
	
	type mobilization_icon_big = widget {
		size = { 60 60 }
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}
		
		icon = {
			parentanchor = center
			framesize = { 120 120 }
			size = { 100% 100% }
			texture = "gfx/interface/icons/generic_icons/mobilize_icon.dds"
			block "frame" {
				frame = 0
			}
		}
	}

	type conscription_icon_big = widget {
		size = { 60 60 }
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}
		
		icon = {
			parentanchor = center
			framesize = { 120 120 }
			size = { 70% 70% }
			texture = "gfx/interface/icons/lens_toolbar_icons/activate_conscription_centers_lens_option.dds"
		}
	}

	type mobilization_controls = widget {
		size = { 535 60 }

		icon = {
			texture = "gfx/interface/animation/smoke.dds"
			size = { 560 180 }
			parentanchor = bottom|hcenter
			position = { 0 60 }
			alpha = 0
			
			modify_texture = {
				name = mask_01
				texture = "gfx/interface/animation/smoke.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
				
				translate_uv = { 0 0 }
			}
			
			modify_texture = {
				name = mask_02
				texture = "gfx/interface/animation/smoke.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
				
				translate_uv = { 0 -0.5 }
			}
		
			state = {
				name = mobilization_effect
				next = 2
				duration = 0.8
				alpha = 1
				
				modify_texture = {
					name = mask_01
					translate_uv = { 0 0.4 }
				}
				modify_texture = {
					name = mask_02
					translate_uv = { 0 0 }
				}
			}
		
			state = {
				name = 2
				next = reset
				duration = 2.5
				using = Animation_Curve_EaseOut
				alpha = 0
				
				modify_texture = {
					name = mask_01
					translate_uv = { 0 0.8 }
				}
				modify_texture = {
					name = mask_02
					translate_uv = { 0 1 }
				}
			}
			
			state = {
				name = reset
				
				modify_texture = {
					name = mask_01
					translate_uv = { 0 0 }
				}
				modify_texture = {
					name = mask_02
					translate_uv = { 0 -0.5 }
				}
			}		
		}
		
		button = {
			using = default_button_primary_big_action
			using = diplomatic_play_mobilize_button_sound
			parentanchor = center
			size = { 520 50 }
			text = "MOBILIZE_ALL_GENERALS_BUTTON"
			using = fontsize_large
			onclick = "[PdxGuiTriggerAllAnimations('mobilization_effect')]"
			onclick = "[PopupManager.ToggleMobilizeAllGenerals]"
			enabled = "[IsValid( Country.MobilizeAllGenerals )]"
			tooltip = "[GetDesc( Country.MobilizeAllGenerals )]"
		}

		margin_widget = {
			parentanchor = center
			margin = { 0 6 }
			size = { 0 50 }
			alpha = 0
			
			state = { 
				name = mobilization_effect
				next = effect2
				size = { 530 50 }
				duration = 0.2
				alpha = 0.5
				using = Animation_Curve_Default
			}
			state = { 
				name = effect2
				next = reset
				size = { 530 50 }
				duration = 0.4
				alpha = 0
				using = Animation_Curve_Default
			}
			state = { 
				name = reset
				size = { 0 50 }
			}
			
			icon = {
				size = { 50% 100% }
				texture = "gfx/interface/animation/mobilize_effect.dds"
			}
			icon = {				
				parentanchor = right
				mirror = horizontal
				size = { 50% 100% }
				texture = "gfx/interface/animation/mobilize_effect.dds"				
			}
			
			icon = {				
				parentanchor = hcenter
				size = { 60% 100% }
				texture = "gfx/interface/animation/mobilize_effect2.dds"
				alpha = 0.5
			}
		}
		
		mobilization_icon_big = {
			parentanchor = vcenter
		}
	}

	type military_panel_army_content = flowcontainer {
		direction = vertical

		tab_army = {}

		default_header_2texts = {
			using = default_list_position
			
			blockoverride "text1" {
				text = "GENERALS_HEADER_COUNT"
			}
			blockoverride "text2" {
				text = "MOBILIZED_BATTALIONS_HEADER_COUNT"
				tooltip = "MOBILIZED_BATTALIONS_HEADER_TOOLTIP"
			}
		}

		widget = { size = { 1 10 }}

		commander_list = {}

		widget = { size = { 1 10 }}

		hq_list = {
			blockoverride "empty_state" {
				empty_state = {

					blockoverride "visible" {
						visible = "[IsDataModelEmpty(Hq.GetBuildingsWithUnitsInReserve)]"
					}
					
					blockoverride "text" {
						text = "NO_BATTALIONS_IN_HQ"
					}
				}
			}
		}

		widget = { size = { 1 10 }}

	}

	type military_panel_wmd_content = flowcontainer {
		direction = vertical
		tab_wmd = {}
	}

	type military_panel_garrison_content = flowcontainer {
		direction = vertical

		top_illu = {
			size = { @panel_width_plus_20 150 }
			background = {
				block "illu" {
					texture = "gfx/interface/illustrations/top_illus/top_illu_army.dds"
				}
				using = top_illu_properties
			}
	
			flowcontainer = {
				direction = vertical
				parentanchor = center
				margin = { 0 10 }
				tooltip = "MILITARY_PANEL_POTENTIAL_GARRISON_TOOLTIP"

				### Garrison / potential garrison
				flowcontainer = {
					parentanchor = hcenter

					textbox = {
						text = "MILITARY_PANEL_CURRENT_GARRISON"
						autoresize = yes
						align = left|nobaseline
						parentanchor = vcenter
						using = fontsize_mega
					}
					textbox = {
						raw_text = " /"
						autoresize = yes
						align = left|nobaseline
						parentanchor = bottom
						using = fontsize_mega
					}
					textbox = {
						text = "MILITARY_PANEL_POTENTIAL_GARRISON"
						autoresize = yes
						align = left|nobaseline
						parentanchor = vcenter
						using = fontsize_large
						margin_top = 10
					}
				}
				
				textbox = {
					text = "MILITARY_PANEL_GARRISON_TOTAL_DEFENSES"
					parentanchor = hcenter
					autoresize = yes
				}
			}
		}

		hq_garrison_tab_list = {}
	}

	type military_panel_navy_content = flowcontainer {
		direction = vertical

		tab_navy = {}

		textbox = {
			margin_top = 10
			margin_bottom = 20
			parentanchor = hcenter
			autoresize = yes
			maximumsize = { @panel_width -1 }
			minimumsize = { @panel_width -1 }
			multiline = yes
			visible = "[Not(StringIsEmpty(Country.GetSeaNodesMightBeConvoyRaidedInDesc))]"
			text = "[Country.GetSeaNodesMightBeConvoyRaidedInDesc]"
		}

		default_header_2texts = {
			using = default_list_position
			
			blockoverride "text1" {
				text = ADMIRALS_HEADER_COUNT
			}
			blockoverride "text2" {
				text = ACTIVE_FLOTILLAS_HEADER_COUNT
			}
		}

		widget = { size = { 1 10 }}
		commander_list = {
			blockoverride "datamodel" {
				datamodel = "[Country.AccessAdmirals]"
			}
		}

		widget = { size = { 1 10 }}

		hq_list = {
			blockoverride "datamodel_hq_entries" {
				datamodel = "[PanelMilitary.GetNavalHQEntries]"
			}

			blockoverride "recruit_new_onclick" {
				onclick = "[Hq.ZoomToHQ]"
				onclick = "[PanelMilitary.OnClickRecruitAdmirals]"
			}

			blockoverride "recruit_text" {
				text = "RECRUIT_ADMIRAL_BUTTON"
			}

			blockoverride "empty_state" {
				empty_state = {

					blockoverride "visible" {
						visible = "[IsDataModelEmpty(Hq.GetBuildingsWithUnitsInReserve)]"
					}

					blockoverride "text" {
						text = "NO_FLOTILLAS_IN_HQ"
					}
				}
			}
		}

		widget = { size = { 1 10 }}
	}

	type panel_military = default_block_window {
		name = "panel_military"
		datacontext = "[PanelMilitary.AccessCountry]"
			
		blockoverride "animation_state_block" {
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/military"
				}
			}

			state = {
				name = _hide
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/military_stop"
				}
			}
		}
		
		blockoverride "window_header_name"
		{
			text = "MILITARY_PANEL"
		}

		blockoverride "fixed_top"
		{
			tab_buttons = {
				# Army
				blockoverride "first_button" {
					text = "MILITARY_PANEL_TAB_ARMY"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "MILITARY_PANEL_TAB_ARMY"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('army')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('army')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('army') )]"
				}
				blockoverride "first_button_selected" {
					text = "MILITARY_PANEL_TAB_ARMY_SELECTED"
				}

				# WMD
				blockoverride "second_button" {
					raw_text = "WMDs"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "WMDs"
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('wmd')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('wmd')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('wmd') )]"
				}
				blockoverride "second_button_selected" {
					raw_text = "WMDs"
				}
				# Garrisons
				blockoverride "third_button" {
					text = "MILITARY_PANEL_TAB_GARRISON"
				}
				blockoverride "third_button_tooltip" {
					tooltip = "MILITARY_PANEL_TAB_GARRISON"
				}
				blockoverride "third_button_click" {
					onclick = "[InformationPanel.SelectTab('garrison')]"
				}
				blockoverride "third_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('garrison')]"
				}
				blockoverride "third_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('garrison') )]"
				}
				blockoverride "third_button_selected" {
					text = "MILITARY_PANEL_TAB_GARRISON_SELECTED"
				}
				
				# Navy
				blockoverride "fourth_button" {
					text = "MILITARY_PANEL_TAB_NAVY"
				}
				blockoverride "fourth_button_tooltip" {
					tooltip = "MILITARY_PANEL_TAB_NAVY"
				}
				blockoverride "fourth_button_click" {
					onclick = "[InformationPanel.SelectTab('navy')]"
				}
				blockoverride "fourth_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('navy')]"
				}
				blockoverride "fourth_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('navy') )]"
				}
				blockoverride "fourth_button_selected" {
					text = "MILITARY_PANEL_TAB_NAVY_SELECTED"
				}
			}
		}

		blockoverride "scrollarea_content" {
			flowcontainer = {
				using = default_list_position
				direction = vertical
				
				military_panel_army_content = {
					visible = "[InformationPanel.IsTabSelected('army')]"
					using = default_fade_in_out
				}

				military_panel_wmd_content = {
					visible = "[InformationPanel.IsTabSelected('wmd')]"
					using = default_fade_in_out
				}

				military_panel_garrison_content = {
					visible = "[InformationPanel.IsTabSelected('garrison')]"
					using = default_fade_in_out
				}

				military_panel_navy_content = {
					visible = "[InformationPanel.IsTabSelected('navy')]"
					using = default_fade_in_out
				}

				widget = { size = { 1 20 } }
			}
		}

		blockoverride "fixed_bottom" {
			fixed_bottom_spacer = {
				visible = "[Not(InformationPanel.IsTabSelected('garrison'))]"
			}
				
			widget = {
				size = { @panel_width 50 }
				visible = "[Not(InformationPanel.IsTabSelected('garrison'))]"

				# Recruit button
				button = {
					using = default_button_map_interaction
					parentanchor = center
					size = { 520 50 }
					using = fontsize_large
					onclick = "[PanelMilitary.OnClickRecruitGenerals]"
					enabled = yes
					visible = "[InformationPanel.IsTabSelected('army')]"
					using = default_content_fade

					flowcontainer = {
						parentanchor = center

						icon = {
							size = { 30 30 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = vcenter
						}
						
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							text = "RECRUIT_CHARACTER_GENERAL"
						}

					}
				}
				
				button = {
					using = default_button_map_interaction
					parentanchor = center
					size = { 520 50 }
					using = fontsize_large
					onclick = "[PanelMilitary.OnClickRecruitAdmirals]"
					enabled = yes
					visible = "[InformationPanel.IsTabSelected('navy')]"
					using = default_content_fade

					flowcontainer = {
						parentanchor = center

						icon = {
							size = { 30 30 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = vcenter
						}
						
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							text = "RECRUIT_CHARACTER_ADMIRAL"
						}

					}
				}
				button = {
					using = default_button_primary_big_action
					parentanchor = center
					size = { 520 50 }
					using = fontsize_large
					enabled = "[GetScriptedGui('wmd_nuclear_can_fire_warheads').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					onclick = "[GetScriptedGui('wmd_fire_nuclear_warheads').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					enabled = yes
					visible = "[InformationPanel.IsTabSelected('wmd')]"
					using = default_content_fade

					flowcontainer = {
						parentanchor = center

						icon = {
							size = { 30 30 }
							texture = "gfx/interface/icons/goods_icons/nuclear_weapons.dds"
							parentanchor = vcenter
						}
						
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							raw_text = "Fire Warheads"
						}

					}
				}
			}
		}
	}
}
